// Code generated by "enumer -type=CUpti_LinkFlag -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_LinkFlag_name_0 = "CUPTI_LINK_FLAG_INVALID"
	_CUpti_LinkFlag_name_1 = "CUPTI_LINK_FLAG_PEER_ACCESS"
	_CUpti_LinkFlag_name_2 = "CUPTI_LINK_FLAG_SYSMEM_ACCESS"
	_CUpti_LinkFlag_name_3 = "CUPTI_LINK_FLAG_PEER_ATOMICS"
	_CUpti_LinkFlag_name_4 = "CUPTI_LINK_FLAG_SYSMEM_ATOMICS"
	_CUpti_LinkFlag_name_5 = "CUPTI_LINK_FLAG_FORCE_INT"
)

var (
	_CUpti_LinkFlag_index_0 = [...]uint8{0, 23}
	_CUpti_LinkFlag_index_1 = [...]uint8{0, 27}
	_CUpti_LinkFlag_index_2 = [...]uint8{0, 29}
	_CUpti_LinkFlag_index_3 = [...]uint8{0, 28}
	_CUpti_LinkFlag_index_4 = [...]uint8{0, 30}
	_CUpti_LinkFlag_index_5 = [...]uint8{0, 25}
)

func (i CUpti_LinkFlag) String() string {
	switch {
	case i == 0:
		return _CUpti_LinkFlag_name_0
	case i == 2:
		return _CUpti_LinkFlag_name_1
	case i == 4:
		return _CUpti_LinkFlag_name_2
	case i == 8:
		return _CUpti_LinkFlag_name_3
	case i == 16:
		return _CUpti_LinkFlag_name_4
	case i == 2147483647:
		return _CUpti_LinkFlag_name_5
	default:
		return fmt.Sprintf("CUpti_LinkFlag(%d)", i)
	}
}

var _CUpti_LinkFlagNameToValue_map = map[string]CUpti_LinkFlag{
	_CUpti_LinkFlag_name_0[0:23]: 0,
	_CUpti_LinkFlag_name_1[0:27]: 2,
	_CUpti_LinkFlag_name_2[0:29]: 4,
	_CUpti_LinkFlag_name_3[0:28]: 8,
	_CUpti_LinkFlag_name_4[0:30]: 16,
	_CUpti_LinkFlag_name_5[0:25]: 2147483647,
}

func CUpti_LinkFlagString(s string) (CUpti_LinkFlag, error) {
	if val, ok := _CUpti_LinkFlagNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_LinkFlag values", s)
}

func (i CUpti_LinkFlag) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_LinkFlag) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_LinkFlag should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_LinkFlagString(s)
	return err
}
