// Code generated by "enumer -type=CUpti_EventAttribute -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_EventAttribute_name_0 = "CUPTI_EVENT_ATTR_NAMECUPTI_EVENT_ATTR_SHORT_DESCRIPTIONCUPTI_EVENT_ATTR_LONG_DESCRIPTIONCUPTI_EVENT_ATTR_CATEGORY"
	_CUpti_EventAttribute_name_1 = "CUPTI_EVENT_ATTR_FORCE_INT"
)

var (
	_CUpti_EventAttribute_index_0 = [...]uint8{0, 21, 55, 88, 113}
	_CUpti_EventAttribute_index_1 = [...]uint8{0, 26}
)

func (i CUpti_EventAttribute) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _CUpti_EventAttribute_name_0[_CUpti_EventAttribute_index_0[i]:_CUpti_EventAttribute_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_EventAttribute_name_1
	default:
		return fmt.Sprintf("CUpti_EventAttribute(%d)", i)
	}
}

var _CUpti_EventAttributeNameToValue_map = map[string]CUpti_EventAttribute{
	_CUpti_EventAttribute_name_0[0:21]:   0,
	_CUpti_EventAttribute_name_0[21:55]:  1,
	_CUpti_EventAttribute_name_0[55:88]:  2,
	_CUpti_EventAttribute_name_0[88:113]: 3,
	_CUpti_EventAttribute_name_1[0:26]:   2147483647,
}

func CUpti_EventAttributeString(s string) (CUpti_EventAttribute, error) {
	if val, ok := _CUpti_EventAttributeNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_EventAttribute values", s)
}

func (i CUpti_EventAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_EventAttribute) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_EventAttribute should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_EventAttributeString(s)
	return err
}
