// Code generated by "enumer -type=CUpti_CallbackIdResource -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_CallbackIdResource_name_0 = "CUPTI_CBID_RESOURCE_INVALIDCUPTI_CBID_RESOURCE_CONTEXT_CREATEDCUPTI_CBID_RESOURCE_CONTEXT_DESTROY_STARTINGCUPTI_CBID_RESOURCE_STREAM_CREATEDCUPTI_CBID_RESOURCE_STREAM_DESTROY_STARTINGCUPTI_CBID_RESOURCE_CU_INIT_FINISHEDCUPTI_CBID_RESOURCE_MODULE_LOADEDCUPTI_CBID_RESOURCE_MODULE_UNLOAD_STARTINGCUPTI_CBID_RESOURCE_MODULE_PROFILEDCUPTI_CBID_RESOURCE_SIZE"
	_CUpti_CallbackIdResource_name_1 = "CUPTI_CBID_RESOURCE_FORCE_INT"
)

var (
	_CUpti_CallbackIdResource_index_0 = [...]uint16{0, 27, 62, 106, 140, 183, 219, 252, 294, 329, 353}
	_CUpti_CallbackIdResource_index_1 = [...]uint8{0, 29}
)

func (i CUpti_CallbackIdResource) String() string {
	switch {
	case 0 <= i && i <= 9:
		return _CUpti_CallbackIdResource_name_0[_CUpti_CallbackIdResource_index_0[i]:_CUpti_CallbackIdResource_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_CallbackIdResource_name_1
	default:
		return fmt.Sprintf("CUpti_CallbackIdResource(%d)", i)
	}
}

var _CUpti_CallbackIdResourceNameToValue_map = map[string]CUpti_CallbackIdResource{
	_CUpti_CallbackIdResource_name_0[0:27]:    0,
	_CUpti_CallbackIdResource_name_0[27:62]:   1,
	_CUpti_CallbackIdResource_name_0[62:106]:  2,
	_CUpti_CallbackIdResource_name_0[106:140]: 3,
	_CUpti_CallbackIdResource_name_0[140:183]: 4,
	_CUpti_CallbackIdResource_name_0[183:219]: 5,
	_CUpti_CallbackIdResource_name_0[219:252]: 6,
	_CUpti_CallbackIdResource_name_0[252:294]: 7,
	_CUpti_CallbackIdResource_name_0[294:329]: 8,
	_CUpti_CallbackIdResource_name_0[329:353]: 9,
	_CUpti_CallbackIdResource_name_1[0:29]:    2147483647,
}

func CUpti_CallbackIdResourceString(s string) (CUpti_CallbackIdResource, error) {
	if val, ok := _CUpti_CallbackIdResourceNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_CallbackIdResource values", s)
}

func (i CUpti_CallbackIdResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_CallbackIdResource) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_CallbackIdResource should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_CallbackIdResourceString(s)
	return err
}
