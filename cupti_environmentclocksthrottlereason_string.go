// Code generated by "enumer -type=CUpti_EnvironmentClocksThrottleReason -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_EnvironmentClocksThrottleReason_name_0 = "CUPTI_CLOCKS_THROTTLE_REASON_NONECUPTI_CLOCKS_THROTTLE_REASON_GPU_IDLECUPTI_CLOCKS_THROTTLE_REASON_USER_DEFINED_CLOCKS"
	_CUpti_EnvironmentClocksThrottleReason_name_1 = "CUPTI_CLOCKS_THROTTLE_REASON_SW_POWER_CAP"
	_CUpti_EnvironmentClocksThrottleReason_name_2 = "CUPTI_CLOCKS_THROTTLE_REASON_HW_SLOWDOWN"
	_CUpti_EnvironmentClocksThrottleReason_name_3 = "CUPTI_CLOCKS_THROTTLE_REASON_UNSUPPORTED"
	_CUpti_EnvironmentClocksThrottleReason_name_4 = "CUPTI_CLOCKS_THROTTLE_REASON_FORCE_INTCUPTI_CLOCKS_THROTTLE_REASON_UNKNOWN"
)

var (
	_CUpti_EnvironmentClocksThrottleReason_index_0 = [...]uint8{0, 33, 70, 118}
	_CUpti_EnvironmentClocksThrottleReason_index_1 = [...]uint8{0, 41}
	_CUpti_EnvironmentClocksThrottleReason_index_2 = [...]uint8{0, 40}
	_CUpti_EnvironmentClocksThrottleReason_index_3 = [...]uint8{0, 40}
	_CUpti_EnvironmentClocksThrottleReason_index_4 = [...]uint8{0, 38, 74}
)

func (i CUpti_EnvironmentClocksThrottleReason) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _CUpti_EnvironmentClocksThrottleReason_name_0[_CUpti_EnvironmentClocksThrottleReason_index_0[i]:_CUpti_EnvironmentClocksThrottleReason_index_0[i+1]]
	case i == 4:
		return _CUpti_EnvironmentClocksThrottleReason_name_1
	case i == 8:
		return _CUpti_EnvironmentClocksThrottleReason_name_2
	case i == 1073741824:
		return _CUpti_EnvironmentClocksThrottleReason_name_3
	case 2147483647 <= i && i <= 2147483648:
		i -= 2147483647
		return _CUpti_EnvironmentClocksThrottleReason_name_4[_CUpti_EnvironmentClocksThrottleReason_index_4[i]:_CUpti_EnvironmentClocksThrottleReason_index_4[i+1]]
	default:
		return fmt.Sprintf("CUpti_EnvironmentClocksThrottleReason(%d)", i)
	}
}

var _CUpti_EnvironmentClocksThrottleReasonNameToValue_map = map[string]CUpti_EnvironmentClocksThrottleReason{
	_CUpti_EnvironmentClocksThrottleReason_name_0[0:33]:   0,
	_CUpti_EnvironmentClocksThrottleReason_name_0[33:70]:  1,
	_CUpti_EnvironmentClocksThrottleReason_name_0[70:118]: 2,
	_CUpti_EnvironmentClocksThrottleReason_name_1[0:41]:   4,
	_CUpti_EnvironmentClocksThrottleReason_name_2[0:40]:   8,
	_CUpti_EnvironmentClocksThrottleReason_name_3[0:40]:   1073741824,
	_CUpti_EnvironmentClocksThrottleReason_name_4[0:38]:   2147483647,
	_CUpti_EnvironmentClocksThrottleReason_name_4[38:74]:  2147483648,
}

func CUpti_EnvironmentClocksThrottleReasonString(s string) (CUpti_EnvironmentClocksThrottleReason, error) {
	if val, ok := _CUpti_EnvironmentClocksThrottleReasonNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_EnvironmentClocksThrottleReason values", s)
}

func (i CUpti_EnvironmentClocksThrottleReason) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_EnvironmentClocksThrottleReason) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_EnvironmentClocksThrottleReason should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_EnvironmentClocksThrottleReasonString(s)
	return err
}
