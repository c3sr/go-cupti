// Code generated by "enumer -type=CUpti_EventGroupAttribute -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_EventGroupAttribute_name_0 = "CUPTI_EVENT_GROUP_ATTR_EVENT_DOMAIN_IDCUPTI_EVENT_GROUP_ATTR_PROFILE_ALL_DOMAIN_INSTANCESCUPTI_EVENT_GROUP_ATTR_USER_DATACUPTI_EVENT_GROUP_ATTR_NUM_EVENTSCUPTI_EVENT_GROUP_ATTR_EVENTSCUPTI_EVENT_GROUP_ATTR_INSTANCE_COUNT"
	_CUpti_EventGroupAttribute_name_1 = "CUPTI_EVENT_GROUP_ATTR_FORCE_INT"
)

var (
	_CUpti_EventGroupAttribute_index_0 = [...]uint8{0, 38, 89, 121, 154, 183, 220}
	_CUpti_EventGroupAttribute_index_1 = [...]uint8{0, 32}
)

func (i CUpti_EventGroupAttribute) String() string {
	switch {
	case 0 <= i && i <= 5:
		return _CUpti_EventGroupAttribute_name_0[_CUpti_EventGroupAttribute_index_0[i]:_CUpti_EventGroupAttribute_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_EventGroupAttribute_name_1
	default:
		return fmt.Sprintf("CUpti_EventGroupAttribute(%d)", i)
	}
}

var _CUpti_EventGroupAttributeNameToValue_map = map[string]CUpti_EventGroupAttribute{
	_CUpti_EventGroupAttribute_name_0[0:38]:    0,
	_CUpti_EventGroupAttribute_name_0[38:89]:   1,
	_CUpti_EventGroupAttribute_name_0[89:121]:  2,
	_CUpti_EventGroupAttribute_name_0[121:154]: 3,
	_CUpti_EventGroupAttribute_name_0[154:183]: 4,
	_CUpti_EventGroupAttribute_name_0[183:220]: 5,
	_CUpti_EventGroupAttribute_name_1[0:32]:    2147483647,
}

func CUpti_EventGroupAttributeString(s string) (CUpti_EventGroupAttribute, error) {
	if val, ok := _CUpti_EventGroupAttributeNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_EventGroupAttribute values", s)
}

func (i CUpti_EventGroupAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_EventGroupAttribute) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_EventGroupAttribute should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_EventGroupAttributeString(s)
	return err
}
