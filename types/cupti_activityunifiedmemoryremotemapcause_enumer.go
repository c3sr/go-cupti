// Code generated by "enumer -type=CUpti_ActivityUnifiedMemoryRemoteMapCause -json -text -yaml -sql"; DO NOT EDIT.

//
package types

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
)

const _CUpti_ActivityUnifiedMemoryRemoteMapCauseName = "CUPTI_ACTIVITY_UNIFIED_MEMORY_REMOTE_MAP_CAUSE_UNKNOWNCUPTI_ACTIVITY_UNIFIED_MEMORY_REMOTE_MAP_CAUSE_COHERENCECUPTI_ACTIVITY_UNIFIED_MEMORY_REMOTE_MAP_CAUSE_THRASHINGCUPTI_ACTIVITY_UNIFIED_MEMORY_REMOTE_MAP_CAUSE_POLICYCUPTI_ACTIVITY_UNIFIED_MEMORY_REMOTE_MAP_CAUSE_OUT_OF_MEMORY"

var _CUpti_ActivityUnifiedMemoryRemoteMapCauseIndex = [...]uint16{0, 54, 110, 166, 219, 279}

func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) String() string {
	if i < 0 || i >= CUpti_ActivityUnifiedMemoryRemoteMapCause(len(_CUpti_ActivityUnifiedMemoryRemoteMapCauseIndex)-1) {
		return fmt.Sprintf("CUpti_ActivityUnifiedMemoryRemoteMapCause(%d)", i)
	}
	return _CUpti_ActivityUnifiedMemoryRemoteMapCauseName[_CUpti_ActivityUnifiedMemoryRemoteMapCauseIndex[i]:_CUpti_ActivityUnifiedMemoryRemoteMapCauseIndex[i+1]]
}

var _CUpti_ActivityUnifiedMemoryRemoteMapCauseValues = []CUpti_ActivityUnifiedMemoryRemoteMapCause{0, 1, 2, 3, 4}

var _CUpti_ActivityUnifiedMemoryRemoteMapCauseNameToValueMap = map[string]CUpti_ActivityUnifiedMemoryRemoteMapCause{
	_CUpti_ActivityUnifiedMemoryRemoteMapCauseName[0:54]:    0,
	_CUpti_ActivityUnifiedMemoryRemoteMapCauseName[54:110]:  1,
	_CUpti_ActivityUnifiedMemoryRemoteMapCauseName[110:166]: 2,
	_CUpti_ActivityUnifiedMemoryRemoteMapCauseName[166:219]: 3,
	_CUpti_ActivityUnifiedMemoryRemoteMapCauseName[219:279]: 4,
}

// CUpti_ActivityUnifiedMemoryRemoteMapCauseString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CUpti_ActivityUnifiedMemoryRemoteMapCauseString(s string) (CUpti_ActivityUnifiedMemoryRemoteMapCause, error) {
	if val, ok := _CUpti_ActivityUnifiedMemoryRemoteMapCauseNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityUnifiedMemoryRemoteMapCause values", s)
}

// CUpti_ActivityUnifiedMemoryRemoteMapCauseValues returns all values of the enum
func CUpti_ActivityUnifiedMemoryRemoteMapCauseValues() []CUpti_ActivityUnifiedMemoryRemoteMapCause {
	return _CUpti_ActivityUnifiedMemoryRemoteMapCauseValues
}

// IsACUpti_ActivityUnifiedMemoryRemoteMapCause returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) IsACUpti_ActivityUnifiedMemoryRemoteMapCause() bool {
	for _, v := range _CUpti_ActivityUnifiedMemoryRemoteMapCauseValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i *CUpti_ActivityUnifiedMemoryRemoteMapCause) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityUnifiedMemoryRemoteMapCause should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityUnifiedMemoryRemoteMapCauseString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i *CUpti_ActivityUnifiedMemoryRemoteMapCause) UnmarshalText(text []byte) error {
	var err error
	*i, err = CUpti_ActivityUnifiedMemoryRemoteMapCauseString(string(text))
	return err
}

// MarshalYAML implements a YAML Marshaler for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for CUpti_ActivityUnifiedMemoryRemoteMapCause
func (i *CUpti_ActivityUnifiedMemoryRemoteMapCause) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = CUpti_ActivityUnifiedMemoryRemoteMapCauseString(s)
	return err
}

func (i CUpti_ActivityUnifiedMemoryRemoteMapCause) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *CUpti_ActivityUnifiedMemoryRemoteMapCause) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	str, ok := value.(string)
	if !ok {
		bytes, ok := value.([]byte)
		if !ok {
			return fmt.Errorf("value is not a byte slice")
		}

		str = string(bytes[:])
	}

	val, err := CUpti_ActivityUnifiedMemoryRemoteMapCauseString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
