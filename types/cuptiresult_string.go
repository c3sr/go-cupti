// Code generated by "enumer -type=CUptiResult -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUptiResult_name_0 = "CUPTI_SUCCESSCUPTI_ERROR_INVALID_PARAMETERCUPTI_ERROR_INVALID_DEVICECUPTI_ERROR_INVALID_CONTEXTCUPTI_ERROR_INVALID_EVENT_DOMAIN_IDCUPTI_ERROR_INVALID_EVENT_IDCUPTI_ERROR_INVALID_EVENT_NAMECUPTI_ERROR_INVALID_OPERATIONCUPTI_ERROR_OUT_OF_MEMORYCUPTI_ERROR_HARDWARECUPTI_ERROR_PARAMETER_SIZE_NOT_SUFFICIENTCUPTI_ERROR_API_NOT_IMPLEMENTEDCUPTI_ERROR_MAX_LIMIT_REACHEDCUPTI_ERROR_NOT_READYCUPTI_ERROR_NOT_COMPATIBLECUPTI_ERROR_NOT_INITIALIZEDCUPTI_ERROR_INVALID_METRIC_IDCUPTI_ERROR_INVALID_METRIC_NAMECUPTI_ERROR_QUEUE_EMPTYCUPTI_ERROR_INVALID_HANDLECUPTI_ERROR_INVALID_STREAMCUPTI_ERROR_INVALID_KINDCUPTI_ERROR_INVALID_EVENT_VALUECUPTI_ERROR_DISABLEDCUPTI_ERROR_INVALID_MODULECUPTI_ERROR_INVALID_METRIC_VALUECUPTI_ERROR_HARDWARE_BUSYCUPTI_ERROR_NOT_SUPPORTEDCUPTI_ERROR_UM_PROFILING_NOT_SUPPORTEDCUPTI_ERROR_UM_PROFILING_NOT_SUPPORTED_ON_DEVICECUPTI_ERROR_UM_PROFILING_NOT_SUPPORTED_ON_NON_P2P_DEVICESCUPTI_ERROR_UM_PROFILING_NOT_SUPPORTED_WITH_MPS"
	_CUptiResult_name_1 = "CUPTI_ERROR_UNKNOWN"
	_CUptiResult_name_2 = "CUPTI_ERROR_FORCE_INT"
)

var (
	_CUptiResult_index_0 = [...]uint16{0, 13, 42, 68, 95, 130, 158, 188, 217, 242, 262, 303, 334, 363, 384, 410, 437, 466, 497, 520, 546, 572, 596, 627, 647, 673, 705, 730, 755, 793, 841, 898, 945}
	_CUptiResult_index_1 = [...]uint8{0, 19}
	_CUptiResult_index_2 = [...]uint8{0, 21}
)

func (i CUptiResult) String() string {
	switch {
	case 0 <= i && i <= 31:
		return _CUptiResult_name_0[_CUptiResult_index_0[i]:_CUptiResult_index_0[i+1]]
	case i == 999:
		return _CUptiResult_name_1
	case i == 2147483647:
		return _CUptiResult_name_2
	default:
		return fmt.Sprintf("CUptiResult(%d)", i)
	}
}

var _CUptiResultNameToValue_map = map[string]CUptiResult{
	_CUptiResult_name_0[0:13]:    0,
	_CUptiResult_name_0[13:42]:   1,
	_CUptiResult_name_0[42:68]:   2,
	_CUptiResult_name_0[68:95]:   3,
	_CUptiResult_name_0[95:130]:  4,
	_CUptiResult_name_0[130:158]: 5,
	_CUptiResult_name_0[158:188]: 6,
	_CUptiResult_name_0[188:217]: 7,
	_CUptiResult_name_0[217:242]: 8,
	_CUptiResult_name_0[242:262]: 9,
	_CUptiResult_name_0[262:303]: 10,
	_CUptiResult_name_0[303:334]: 11,
	_CUptiResult_name_0[334:363]: 12,
	_CUptiResult_name_0[363:384]: 13,
	_CUptiResult_name_0[384:410]: 14,
	_CUptiResult_name_0[410:437]: 15,
	_CUptiResult_name_0[437:466]: 16,
	_CUptiResult_name_0[466:497]: 17,
	_CUptiResult_name_0[497:520]: 18,
	_CUptiResult_name_0[520:546]: 19,
	_CUptiResult_name_0[546:572]: 20,
	_CUptiResult_name_0[572:596]: 21,
	_CUptiResult_name_0[596:627]: 22,
	_CUptiResult_name_0[627:647]: 23,
	_CUptiResult_name_0[647:673]: 24,
	_CUptiResult_name_0[673:705]: 25,
	_CUptiResult_name_0[705:730]: 26,
	_CUptiResult_name_0[730:755]: 27,
	_CUptiResult_name_0[755:793]: 28,
	_CUptiResult_name_0[793:841]: 29,
	_CUptiResult_name_0[841:898]: 30,
	_CUptiResult_name_0[898:945]: 31,
	_CUptiResult_name_1[0:19]:    999,
	_CUptiResult_name_2[0:21]:    2147483647,
}

func CUptiResultString(s string) (CUptiResult, error) {
	if val, ok := _CUptiResultNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUptiResult values", s)
}

func (i CUptiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUptiResult) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUptiResult should be a string, got %s", data)
	}

	var err error
	*i, err = CUptiResultString(s)
	return err
}
