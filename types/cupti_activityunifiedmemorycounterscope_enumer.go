// Code generated by "enumer -type=CUpti_ActivityUnifiedMemoryCounterScope -json -text -yaml -sql"; DO NOT EDIT.

//
package types

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityUnifiedMemoryCounterScopeName_0 = "CUPTI_ACTIVITY_UNIFIED_MEMORY_COUNTER_SCOPE_UNKNOWNCUPTI_ACTIVITY_UNIFIED_MEMORY_COUNTER_SCOPE_PROCESS_SINGLE_DEVICECUPTI_ACTIVITY_UNIFIED_MEMORY_COUNTER_SCOPE_PROCESS_ALL_DEVICES"
	_CUpti_ActivityUnifiedMemoryCounterScopeName_1 = "CUPTI_ACTIVITY_UNIFIED_MEMORY_COUNTER_SCOPE_FORCE_INT"
)

var (
	_CUpti_ActivityUnifiedMemoryCounterScopeIndex_0 = [...]uint8{0, 51, 116, 179}
	_CUpti_ActivityUnifiedMemoryCounterScopeIndex_1 = [...]uint8{0, 53}
)

func (i CUpti_ActivityUnifiedMemoryCounterScope) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _CUpti_ActivityUnifiedMemoryCounterScopeName_0[_CUpti_ActivityUnifiedMemoryCounterScopeIndex_0[i]:_CUpti_ActivityUnifiedMemoryCounterScopeIndex_0[i+1]]
	case i == 2147483647:
		return _CUpti_ActivityUnifiedMemoryCounterScopeName_1
	default:
		return fmt.Sprintf("CUpti_ActivityUnifiedMemoryCounterScope(%d)", i)
	}
}

var _CUpti_ActivityUnifiedMemoryCounterScopeValues = []CUpti_ActivityUnifiedMemoryCounterScope{0, 1, 2, 2147483647}

var _CUpti_ActivityUnifiedMemoryCounterScopeNameToValueMap = map[string]CUpti_ActivityUnifiedMemoryCounterScope{
	_CUpti_ActivityUnifiedMemoryCounterScopeName_0[0:51]:    0,
	_CUpti_ActivityUnifiedMemoryCounterScopeName_0[51:116]:  1,
	_CUpti_ActivityUnifiedMemoryCounterScopeName_0[116:179]: 2,
	_CUpti_ActivityUnifiedMemoryCounterScopeName_1[0:53]:    2147483647,
}

// CUpti_ActivityUnifiedMemoryCounterScopeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CUpti_ActivityUnifiedMemoryCounterScopeString(s string) (CUpti_ActivityUnifiedMemoryCounterScope, error) {
	if val, ok := _CUpti_ActivityUnifiedMemoryCounterScopeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityUnifiedMemoryCounterScope values", s)
}

// CUpti_ActivityUnifiedMemoryCounterScopeValues returns all values of the enum
func CUpti_ActivityUnifiedMemoryCounterScopeValues() []CUpti_ActivityUnifiedMemoryCounterScope {
	return _CUpti_ActivityUnifiedMemoryCounterScopeValues
}

// IsACUpti_ActivityUnifiedMemoryCounterScope returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CUpti_ActivityUnifiedMemoryCounterScope) IsACUpti_ActivityUnifiedMemoryCounterScope() bool {
	for _, v := range _CUpti_ActivityUnifiedMemoryCounterScopeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CUpti_ActivityUnifiedMemoryCounterScope
func (i CUpti_ActivityUnifiedMemoryCounterScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CUpti_ActivityUnifiedMemoryCounterScope
func (i *CUpti_ActivityUnifiedMemoryCounterScope) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityUnifiedMemoryCounterScope should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityUnifiedMemoryCounterScopeString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for CUpti_ActivityUnifiedMemoryCounterScope
func (i CUpti_ActivityUnifiedMemoryCounterScope) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for CUpti_ActivityUnifiedMemoryCounterScope
func (i *CUpti_ActivityUnifiedMemoryCounterScope) UnmarshalText(text []byte) error {
	var err error
	*i, err = CUpti_ActivityUnifiedMemoryCounterScopeString(string(text))
	return err
}

// MarshalYAML implements a YAML Marshaler for CUpti_ActivityUnifiedMemoryCounterScope
func (i CUpti_ActivityUnifiedMemoryCounterScope) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for CUpti_ActivityUnifiedMemoryCounterScope
func (i *CUpti_ActivityUnifiedMemoryCounterScope) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = CUpti_ActivityUnifiedMemoryCounterScopeString(s)
	return err
}

func (i CUpti_ActivityUnifiedMemoryCounterScope) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *CUpti_ActivityUnifiedMemoryCounterScope) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	str, ok := value.(string)
	if !ok {
		bytes, ok := value.([]byte)
		if !ok {
			return fmt.Errorf("value is not a byte slice")
		}

		str = string(bytes[:])
	}

	val, err := CUpti_ActivityUnifiedMemoryCounterScopeString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
