// Code generated by "enumer -type=CUpti_MetricValueUtilizationLevel -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_MetricValueUtilizationLevel_name_0 = "CUPTI_METRIC_VALUE_UTILIZATION_IDLE"
	_CUpti_MetricValueUtilizationLevel_name_1 = "CUPTI_METRIC_VALUE_UTILIZATION_LOW"
	_CUpti_MetricValueUtilizationLevel_name_2 = "CUPTI_METRIC_VALUE_UTILIZATION_MID"
	_CUpti_MetricValueUtilizationLevel_name_3 = "CUPTI_METRIC_VALUE_UTILIZATION_HIGH"
	_CUpti_MetricValueUtilizationLevel_name_4 = "CUPTI_METRIC_VALUE_UTILIZATION_MAX"
	_CUpti_MetricValueUtilizationLevel_name_5 = "CUPTI_METRIC_VALUE_UTILIZATION_FORCE_INT"
)

var (
	_CUpti_MetricValueUtilizationLevel_index_0 = [...]uint8{0, 35}
	_CUpti_MetricValueUtilizationLevel_index_1 = [...]uint8{0, 34}
	_CUpti_MetricValueUtilizationLevel_index_2 = [...]uint8{0, 34}
	_CUpti_MetricValueUtilizationLevel_index_3 = [...]uint8{0, 35}
	_CUpti_MetricValueUtilizationLevel_index_4 = [...]uint8{0, 34}
	_CUpti_MetricValueUtilizationLevel_index_5 = [...]uint8{0, 40}
)

func (i CUpti_MetricValueUtilizationLevel) String() string {
	switch {
	case i == 0:
		return _CUpti_MetricValueUtilizationLevel_name_0
	case i == 2:
		return _CUpti_MetricValueUtilizationLevel_name_1
	case i == 5:
		return _CUpti_MetricValueUtilizationLevel_name_2
	case i == 8:
		return _CUpti_MetricValueUtilizationLevel_name_3
	case i == 10:
		return _CUpti_MetricValueUtilizationLevel_name_4
	case i == 2147483647:
		return _CUpti_MetricValueUtilizationLevel_name_5
	default:
		return fmt.Sprintf("CUpti_MetricValueUtilizationLevel(%d)", i)
	}
}

var _CUpti_MetricValueUtilizationLevelNameToValue_map = map[string]CUpti_MetricValueUtilizationLevel{
	_CUpti_MetricValueUtilizationLevel_name_0[0:35]: 0,
	_CUpti_MetricValueUtilizationLevel_name_1[0:34]: 2,
	_CUpti_MetricValueUtilizationLevel_name_2[0:34]: 5,
	_CUpti_MetricValueUtilizationLevel_name_3[0:35]: 8,
	_CUpti_MetricValueUtilizationLevel_name_4[0:34]: 10,
	_CUpti_MetricValueUtilizationLevel_name_5[0:40]: 2147483647,
}

func CUpti_MetricValueUtilizationLevelString(s string) (CUpti_MetricValueUtilizationLevel, error) {
	if val, ok := _CUpti_MetricValueUtilizationLevelNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_MetricValueUtilizationLevel values", s)
}

func (i CUpti_MetricValueUtilizationLevel) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_MetricValueUtilizationLevel) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_MetricValueUtilizationLevel should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_MetricValueUtilizationLevelString(s)
	return err
}
