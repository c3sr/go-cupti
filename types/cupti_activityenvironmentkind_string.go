// Code generated by "enumer -type=CUpti_ActivityEnvironmentKind -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityEnvironmentKind_name_0 = "CUPTI_ACTIVITY_ENVIRONMENT_UNKNOWNCUPTI_ACTIVITY_ENVIRONMENT_SPEEDCUPTI_ACTIVITY_ENVIRONMENT_TEMPERATURECUPTI_ACTIVITY_ENVIRONMENT_POWERCUPTI_ACTIVITY_ENVIRONMENT_COOLING"
	_CUpti_ActivityEnvironmentKind_name_1 = "CUPTI_ACTIVITY_ENVIRONMENT_KIND_FORCE_INT"
)

var (
	_CUpti_ActivityEnvironmentKind_index_0 = [...]uint8{0, 34, 66, 104, 136, 170}
	_CUpti_ActivityEnvironmentKind_index_1 = [...]uint8{0, 41}
)

func (i CUpti_ActivityEnvironmentKind) String() string {
	switch {
	case 0 <= i && i <= 4:
		return _CUpti_ActivityEnvironmentKind_name_0[_CUpti_ActivityEnvironmentKind_index_0[i]:_CUpti_ActivityEnvironmentKind_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_ActivityEnvironmentKind_name_1
	default:
		return fmt.Sprintf("CUpti_ActivityEnvironmentKind(%d)", i)
	}
}

var _CUpti_ActivityEnvironmentKindNameToValue_map = map[string]CUpti_ActivityEnvironmentKind{
	_CUpti_ActivityEnvironmentKind_name_0[0:34]:    0,
	_CUpti_ActivityEnvironmentKind_name_0[34:66]:   1,
	_CUpti_ActivityEnvironmentKind_name_0[66:104]:  2,
	_CUpti_ActivityEnvironmentKind_name_0[104:136]: 3,
	_CUpti_ActivityEnvironmentKind_name_0[136:170]: 4,
	_CUpti_ActivityEnvironmentKind_name_1[0:41]:    2147483647,
}

func CUpti_ActivityEnvironmentKindString(s string) (CUpti_ActivityEnvironmentKind, error) {
	if val, ok := _CUpti_ActivityEnvironmentKindNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityEnvironmentKind values", s)
}

func (i CUpti_ActivityEnvironmentKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_ActivityEnvironmentKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityEnvironmentKind should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityEnvironmentKindString(s)
	return err
}
