// Code generated by "enumer -type=CUpti_ActivityFlag -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityFlag_name_0 = "CUPTI_ACTIVITY_FLAG_NONECUPTI_ACTIVITY_FLAG_DEVICE_CONCURRENT_KERNELSCUPTI_ACTIVITY_FLAG_MARKER_START"
	_CUpti_ActivityFlag_name_1 = "CUPTI_ACTIVITY_FLAG_MARKER_END"
	_CUpti_ActivityFlag_name_2 = "CUPTI_ACTIVITY_FLAG_MARKER_SYNC_ACQUIRE"
	_CUpti_ActivityFlag_name_3 = "CUPTI_ACTIVITY_FLAG_MARKER_SYNC_ACQUIRE_SUCCESS"
	_CUpti_ActivityFlag_name_4 = "CUPTI_ACTIVITY_FLAG_MARKER_SYNC_ACQUIRE_FAILED"
	_CUpti_ActivityFlag_name_5 = "CUPTI_ACTIVITY_FLAG_MARKER_SYNC_RELEASE"
	_CUpti_ActivityFlag_name_6 = "CUPTI_ACTIVITY_FLAG_GLOBAL_ACCESS_KIND_SIZE_MASKCUPTI_ACTIVITY_FLAG_GLOBAL_ACCESS_KIND_LOAD"
	_CUpti_ActivityFlag_name_7 = "CUPTI_ACTIVITY_FLAG_INSTRUCTION_CLASS_MASK"
	_CUpti_ActivityFlag_name_8 = "CUPTI_ACTIVITY_FLAG_GLOBAL_ACCESS_KIND_CACHED"
	_CUpti_ActivityFlag_name_9 = "CUPTI_ACTIVITY_FLAG_FORCE_INT"
)

var (
	_CUpti_ActivityFlag_index_0 = [...]uint8{0, 24, 69, 101}
	_CUpti_ActivityFlag_index_1 = [...]uint8{0, 30}
	_CUpti_ActivityFlag_index_2 = [...]uint8{0, 39}
	_CUpti_ActivityFlag_index_3 = [...]uint8{0, 47}
	_CUpti_ActivityFlag_index_4 = [...]uint8{0, 46}
	_CUpti_ActivityFlag_index_5 = [...]uint8{0, 39}
	_CUpti_ActivityFlag_index_6 = [...]uint8{0, 48, 91}
	_CUpti_ActivityFlag_index_7 = [...]uint8{0, 42}
	_CUpti_ActivityFlag_index_8 = [...]uint8{0, 45}
	_CUpti_ActivityFlag_index_9 = [...]uint8{0, 29}
)

func (i CUpti_ActivityFlag) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _CUpti_ActivityFlag_name_0[_CUpti_ActivityFlag_index_0[i]:_CUpti_ActivityFlag_index_0[i+1]]
	case i == 4:
		return _CUpti_ActivityFlag_name_1
	case i == 8:
		return _CUpti_ActivityFlag_name_2
	case i == 16:
		return _CUpti_ActivityFlag_name_3
	case i == 32:
		return _CUpti_ActivityFlag_name_4
	case i == 64:
		return _CUpti_ActivityFlag_name_5
	case 255 <= i && i <= 256:
		i -= 255
		return _CUpti_ActivityFlag_name_6[_CUpti_ActivityFlag_index_6[i]:_CUpti_ActivityFlag_index_6[i+1]]
	case i == 510:
		return _CUpti_ActivityFlag_name_7
	case i == 512:
		return _CUpti_ActivityFlag_name_8
	case i == 2147483647:
		return _CUpti_ActivityFlag_name_9
	default:
		return fmt.Sprintf("CUpti_ActivityFlag(%d)", i)
	}
}

var _CUpti_ActivityFlagNameToValue_map = map[string]CUpti_ActivityFlag{
	_CUpti_ActivityFlag_name_0[0:24]:   0,
	_CUpti_ActivityFlag_name_0[24:69]:  1,
	_CUpti_ActivityFlag_name_0[69:101]: 2,
	_CUpti_ActivityFlag_name_1[0:30]:   4,
	_CUpti_ActivityFlag_name_2[0:39]:   8,
	_CUpti_ActivityFlag_name_3[0:47]:   16,
	_CUpti_ActivityFlag_name_4[0:46]:   32,
	_CUpti_ActivityFlag_name_5[0:39]:   64,
	_CUpti_ActivityFlag_name_6[0:48]:   255,
	_CUpti_ActivityFlag_name_6[48:91]:  256,
	_CUpti_ActivityFlag_name_7[0:42]:   510,
	_CUpti_ActivityFlag_name_8[0:45]:   512,
	_CUpti_ActivityFlag_name_9[0:29]:   2147483647,
}

func CUpti_ActivityFlagString(s string) (CUpti_ActivityFlag, error) {
	if val, ok := _CUpti_ActivityFlagNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityFlag values", s)
}

func (i CUpti_ActivityFlag) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_ActivityFlag) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityFlag should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityFlagString(s)
	return err
}
