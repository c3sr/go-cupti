// Code generated by "enumer -type=CUpti_ActivityComputeApiKind -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityComputeApiKind_name_0 = "CUPTI_ACTIVITY_COMPUTE_API_UNKNOWNCUPTI_ACTIVITY_COMPUTE_API_CUDACUPTI_ACTIVITY_COMPUTE_API_CUDA_MPS"
	_CUpti_ActivityComputeApiKind_name_1 = "CUPTI_ACTIVITY_COMPUTE_API_FORCE_INT"
)

var (
	_CUpti_ActivityComputeApiKind_index_0 = [...]uint8{0, 34, 65, 100}
	_CUpti_ActivityComputeApiKind_index_1 = [...]uint8{0, 36}
)

func (i CUpti_ActivityComputeApiKind) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _CUpti_ActivityComputeApiKind_name_0[_CUpti_ActivityComputeApiKind_index_0[i]:_CUpti_ActivityComputeApiKind_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_ActivityComputeApiKind_name_1
	default:
		return fmt.Sprintf("CUpti_ActivityComputeApiKind(%d)", i)
	}
}

var _CUpti_ActivityComputeApiKindNameToValue_map = map[string]CUpti_ActivityComputeApiKind{
	_CUpti_ActivityComputeApiKind_name_0[0:34]:   0,
	_CUpti_ActivityComputeApiKind_name_0[34:65]:  1,
	_CUpti_ActivityComputeApiKind_name_0[65:100]: 2,
	_CUpti_ActivityComputeApiKind_name_1[0:36]:   2147483647,
}

func CUpti_ActivityComputeApiKindString(s string) (CUpti_ActivityComputeApiKind, error) {
	if val, ok := _CUpti_ActivityComputeApiKindNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityComputeApiKind values", s)
}

func (i CUpti_ActivityComputeApiKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_ActivityComputeApiKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityComputeApiKind should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityComputeApiKindString(s)
	return err
}
