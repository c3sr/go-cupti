// Code generated by "enumer -type=CUpti_ActivityMemoryKind -json -text -yaml -sql"; DO NOT EDIT.

//
package types

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityMemoryKindName_0 = "CUPTI_ACTIVITY_MEMORY_KIND_UNKNOWNCUPTI_ACTIVITY_MEMORY_KIND_PAGEABLECUPTI_ACTIVITY_MEMORY_KIND_PINNEDCUPTI_ACTIVITY_MEMORY_KIND_DEVICECUPTI_ACTIVITY_MEMORY_KIND_ARRAYCUPTI_ACTIVITY_MEMORY_KIND_MANAGEDCUPTI_ACTIVITY_MEMORY_KIND_DEVICE_STATICCUPTI_ACTIVITY_MEMORY_KIND_MANAGED_STATIC"
	_CUpti_ActivityMemoryKindName_1 = "CUPTI_ACTIVITY_MEMORY_KIND_FORCE_INT"
)

var (
	_CUpti_ActivityMemoryKindIndex_0 = [...]uint16{0, 34, 69, 102, 135, 167, 201, 241, 282}
	_CUpti_ActivityMemoryKindIndex_1 = [...]uint8{0, 36}
)

func (i CUpti_ActivityMemoryKind) String() string {
	switch {
	case 0 <= i && i <= 7:
		return _CUpti_ActivityMemoryKindName_0[_CUpti_ActivityMemoryKindIndex_0[i]:_CUpti_ActivityMemoryKindIndex_0[i+1]]
	case i == 2147483647:
		return _CUpti_ActivityMemoryKindName_1
	default:
		return fmt.Sprintf("CUpti_ActivityMemoryKind(%d)", i)
	}
}

var _CUpti_ActivityMemoryKindValues = []CUpti_ActivityMemoryKind{0, 1, 2, 3, 4, 5, 6, 7, 2147483647}

var _CUpti_ActivityMemoryKindNameToValueMap = map[string]CUpti_ActivityMemoryKind{
	_CUpti_ActivityMemoryKindName_0[0:34]:    0,
	_CUpti_ActivityMemoryKindName_0[34:69]:   1,
	_CUpti_ActivityMemoryKindName_0[69:102]:  2,
	_CUpti_ActivityMemoryKindName_0[102:135]: 3,
	_CUpti_ActivityMemoryKindName_0[135:167]: 4,
	_CUpti_ActivityMemoryKindName_0[167:201]: 5,
	_CUpti_ActivityMemoryKindName_0[201:241]: 6,
	_CUpti_ActivityMemoryKindName_0[241:282]: 7,
	_CUpti_ActivityMemoryKindName_1[0:36]:    2147483647,
}

// CUpti_ActivityMemoryKindString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CUpti_ActivityMemoryKindString(s string) (CUpti_ActivityMemoryKind, error) {
	if val, ok := _CUpti_ActivityMemoryKindNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityMemoryKind values", s)
}

// CUpti_ActivityMemoryKindValues returns all values of the enum
func CUpti_ActivityMemoryKindValues() []CUpti_ActivityMemoryKind {
	return _CUpti_ActivityMemoryKindValues
}

// IsACUpti_ActivityMemoryKind returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CUpti_ActivityMemoryKind) IsACUpti_ActivityMemoryKind() bool {
	for _, v := range _CUpti_ActivityMemoryKindValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CUpti_ActivityMemoryKind
func (i CUpti_ActivityMemoryKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CUpti_ActivityMemoryKind
func (i *CUpti_ActivityMemoryKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityMemoryKind should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityMemoryKindString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for CUpti_ActivityMemoryKind
func (i CUpti_ActivityMemoryKind) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for CUpti_ActivityMemoryKind
func (i *CUpti_ActivityMemoryKind) UnmarshalText(text []byte) error {
	var err error
	*i, err = CUpti_ActivityMemoryKindString(string(text))
	return err
}

// MarshalYAML implements a YAML Marshaler for CUpti_ActivityMemoryKind
func (i CUpti_ActivityMemoryKind) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for CUpti_ActivityMemoryKind
func (i *CUpti_ActivityMemoryKind) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = CUpti_ActivityMemoryKindString(s)
	return err
}

func (i CUpti_ActivityMemoryKind) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *CUpti_ActivityMemoryKind) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	str, ok := value.(string)
	if !ok {
		bytes, ok := value.([]byte)
		if !ok {
			return fmt.Errorf("value is not a byte slice")
		}

		str = string(bytes[:])
	}

	val, err := CUpti_ActivityMemoryKindString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
