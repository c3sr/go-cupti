// Code generated by "enumer -type=CUresult -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const _CUresult_name = "CUDA_SUCCESSCUDA_ERROR_INVALID_VALUECUDA_ERROR_OUT_OF_MEMORYCUDA_ERROR_NOT_INITIALIZEDCUDA_ERROR_DEINITIALIZEDCUDA_ERROR_PROFILER_DISABLEDCUDA_ERROR_PROFILER_NOT_INITIALIZEDCUDA_ERROR_PROFILER_ALREADY_STARTEDCUDA_ERROR_PROFILER_ALREADY_STOPPEDCUDA_ERROR_NO_DEVICECUDA_ERROR_INVALID_DEVICECUDA_ERROR_INVALID_IMAGECUDA_ERROR_INVALID_CONTEXTCUDA_ERROR_CONTEXT_ALREADY_CURRENTCUDA_ERROR_MAP_FAILEDCUDA_ERROR_UNMAP_FAILEDCUDA_ERROR_ARRAY_IS_MAPPEDCUDA_ERROR_ALREADY_MAPPEDCUDA_ERROR_NO_BINARY_FOR_GPUCUDA_ERROR_ALREADY_ACQUIREDCUDA_ERROR_NOT_MAPPEDCUDA_ERROR_NOT_MAPPED_AS_ARRAYCUDA_ERROR_NOT_MAPPED_AS_POINTERCUDA_ERROR_ECC_UNCORRECTABLECUDA_ERROR_UNSUPPORTED_LIMITCUDA_ERROR_CONTEXT_ALREADY_IN_USECUDA_ERROR_PEER_ACCESS_UNSUPPORTEDCUDA_ERROR_INVALID_PTXCUDA_ERROR_INVALID_GRAPHICS_CONTEXTCUDA_ERROR_NVLINK_UNCORRECTABLECUDA_ERROR_JIT_COMPILER_NOT_FOUNDCUDA_ERROR_INVALID_SOURCECUDA_ERROR_FILE_NOT_FOUNDCUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUNDCUDA_ERROR_SHARED_OBJECT_INIT_FAILEDCUDA_ERROR_OPERATING_SYSTEMCUDA_ERROR_INVALID_HANDLECUDA_ERROR_NOT_FOUNDCUDA_ERROR_NOT_READYCUDA_ERROR_ILLEGAL_ADDRESSCUDA_ERROR_LAUNCH_OUT_OF_RESOURCESCUDA_ERROR_LAUNCH_TIMEOUTCUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURINGCUDA_ERROR_PEER_ACCESS_ALREADY_ENABLEDCUDA_ERROR_PEER_ACCESS_NOT_ENABLEDCUDA_ERROR_PRIMARY_CONTEXT_ACTIVECUDA_ERROR_CONTEXT_IS_DESTROYEDCUDA_ERROR_ASSERTCUDA_ERROR_TOO_MANY_PEERSCUDA_ERROR_HOST_MEMORY_ALREADY_REGISTEREDCUDA_ERROR_HOST_MEMORY_NOT_REGISTEREDCUDA_ERROR_HARDWARE_STACK_ERRORCUDA_ERROR_ILLEGAL_INSTRUCTIONCUDA_ERROR_MISALIGNED_ADDRESSCUDA_ERROR_INVALID_ADDRESS_SPACECUDA_ERROR_INVALID_PCCUDA_ERROR_LAUNCH_FAILEDCUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGECUDA_ERROR_NOT_PERMITTEDCUDA_ERROR_NOT_SUPPORTEDCUDA_ERROR_UNKNOWN"

var _CUresult_map = map[CUresult]string{
	0:   _CUresult_name[0:12],
	1:   _CUresult_name[12:36],
	2:   _CUresult_name[36:60],
	3:   _CUresult_name[60:86],
	4:   _CUresult_name[86:110],
	5:   _CUresult_name[110:138],
	6:   _CUresult_name[138:173],
	7:   _CUresult_name[173:208],
	8:   _CUresult_name[208:243],
	100: _CUresult_name[243:263],
	101: _CUresult_name[263:288],
	200: _CUresult_name[288:312],
	201: _CUresult_name[312:338],
	202: _CUresult_name[338:372],
	205: _CUresult_name[372:393],
	206: _CUresult_name[393:416],
	207: _CUresult_name[416:442],
	208: _CUresult_name[442:467],
	209: _CUresult_name[467:495],
	210: _CUresult_name[495:522],
	211: _CUresult_name[522:543],
	212: _CUresult_name[543:573],
	213: _CUresult_name[573:605],
	214: _CUresult_name[605:633],
	215: _CUresult_name[633:661],
	216: _CUresult_name[661:694],
	217: _CUresult_name[694:728],
	218: _CUresult_name[728:750],
	219: _CUresult_name[750:785],
	220: _CUresult_name[785:816],
	221: _CUresult_name[816:849],
	300: _CUresult_name[849:874],
	301: _CUresult_name[874:899],
	302: _CUresult_name[899:940],
	303: _CUresult_name[940:976],
	304: _CUresult_name[976:1003],
	400: _CUresult_name[1003:1028],
	500: _CUresult_name[1028:1048],
	600: _CUresult_name[1048:1068],
	700: _CUresult_name[1068:1094],
	701: _CUresult_name[1094:1128],
	702: _CUresult_name[1128:1153],
	703: _CUresult_name[1153:1193],
	704: _CUresult_name[1193:1231],
	705: _CUresult_name[1231:1265],
	708: _CUresult_name[1265:1298],
	709: _CUresult_name[1298:1329],
	710: _CUresult_name[1329:1346],
	711: _CUresult_name[1346:1371],
	712: _CUresult_name[1371:1412],
	713: _CUresult_name[1412:1449],
	714: _CUresult_name[1449:1480],
	715: _CUresult_name[1480:1510],
	716: _CUresult_name[1510:1539],
	717: _CUresult_name[1539:1571],
	718: _CUresult_name[1571:1592],
	719: _CUresult_name[1592:1616],
	720: _CUresult_name[1616:1655],
	800: _CUresult_name[1655:1679],
	801: _CUresult_name[1679:1703],
	999: _CUresult_name[1703:1721],
}

func (i CUresult) String() string {
	if str, ok := _CUresult_map[i]; ok {
		return str
	}
	return fmt.Sprintf("CUresult(%d)", i)
}

var _CUresultNameToValue_map = map[string]CUresult{
	_CUresult_name[0:12]:      0,
	_CUresult_name[12:36]:     1,
	_CUresult_name[36:60]:     2,
	_CUresult_name[60:86]:     3,
	_CUresult_name[86:110]:    4,
	_CUresult_name[110:138]:   5,
	_CUresult_name[138:173]:   6,
	_CUresult_name[173:208]:   7,
	_CUresult_name[208:243]:   8,
	_CUresult_name[243:263]:   100,
	_CUresult_name[263:288]:   101,
	_CUresult_name[288:312]:   200,
	_CUresult_name[312:338]:   201,
	_CUresult_name[338:372]:   202,
	_CUresult_name[372:393]:   205,
	_CUresult_name[393:416]:   206,
	_CUresult_name[416:442]:   207,
	_CUresult_name[442:467]:   208,
	_CUresult_name[467:495]:   209,
	_CUresult_name[495:522]:   210,
	_CUresult_name[522:543]:   211,
	_CUresult_name[543:573]:   212,
	_CUresult_name[573:605]:   213,
	_CUresult_name[605:633]:   214,
	_CUresult_name[633:661]:   215,
	_CUresult_name[661:694]:   216,
	_CUresult_name[694:728]:   217,
	_CUresult_name[728:750]:   218,
	_CUresult_name[750:785]:   219,
	_CUresult_name[785:816]:   220,
	_CUresult_name[816:849]:   221,
	_CUresult_name[849:874]:   300,
	_CUresult_name[874:899]:   301,
	_CUresult_name[899:940]:   302,
	_CUresult_name[940:976]:   303,
	_CUresult_name[976:1003]:  304,
	_CUresult_name[1003:1028]: 400,
	_CUresult_name[1028:1048]: 500,
	_CUresult_name[1048:1068]: 600,
	_CUresult_name[1068:1094]: 700,
	_CUresult_name[1094:1128]: 701,
	_CUresult_name[1128:1153]: 702,
	_CUresult_name[1153:1193]: 703,
	_CUresult_name[1193:1231]: 704,
	_CUresult_name[1231:1265]: 705,
	_CUresult_name[1265:1298]: 708,
	_CUresult_name[1298:1329]: 709,
	_CUresult_name[1329:1346]: 710,
	_CUresult_name[1346:1371]: 711,
	_CUresult_name[1371:1412]: 712,
	_CUresult_name[1412:1449]: 713,
	_CUresult_name[1449:1480]: 714,
	_CUresult_name[1480:1510]: 715,
	_CUresult_name[1510:1539]: 716,
	_CUresult_name[1539:1571]: 717,
	_CUresult_name[1571:1592]: 718,
	_CUresult_name[1592:1616]: 719,
	_CUresult_name[1616:1655]: 720,
	_CUresult_name[1655:1679]: 800,
	_CUresult_name[1679:1703]: 801,
	_CUresult_name[1703:1721]: 999,
}

func CUresultString(s string) (CUresult, error) {
	if val, ok := _CUresultNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUresult values", s)
}

func (i CUresult) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUresult) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUresult should be a string, got %s", data)
	}

	var err error
	*i, err = CUresultString(s)
	return err
}
