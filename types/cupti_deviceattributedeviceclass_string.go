// Code generated by "enumer -type=CUpti_DeviceAttributeDeviceClass -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const _CUpti_DeviceAttributeDeviceClass_name = "CUPTI_DEVICE_ATTR_DEVICE_CLASS_TESLACUPTI_DEVICE_ATTR_DEVICE_CLASS_QUADROCUPTI_DEVICE_ATTR_DEVICE_CLASS_GEFORCECUPTI_DEVICE_ATTR_DEVICE_CLASS_TEGRA"

var _CUpti_DeviceAttributeDeviceClass_index = [...]uint8{0, 36, 73, 111, 147}

func (i CUpti_DeviceAttributeDeviceClass) String() string {
	if i < 0 || i >= CUpti_DeviceAttributeDeviceClass(len(_CUpti_DeviceAttributeDeviceClass_index)-1) {
		return fmt.Sprintf("CUpti_DeviceAttributeDeviceClass(%d)", i)
	}
	return _CUpti_DeviceAttributeDeviceClass_name[_CUpti_DeviceAttributeDeviceClass_index[i]:_CUpti_DeviceAttributeDeviceClass_index[i+1]]
}

var _CUpti_DeviceAttributeDeviceClassNameToValue_map = map[string]CUpti_DeviceAttributeDeviceClass{
	_CUpti_DeviceAttributeDeviceClass_name[0:36]:    0,
	_CUpti_DeviceAttributeDeviceClass_name[36:73]:   1,
	_CUpti_DeviceAttributeDeviceClass_name[73:111]:  2,
	_CUpti_DeviceAttributeDeviceClass_name[111:147]: 3,
}

func CUpti_DeviceAttributeDeviceClassString(s string) (CUpti_DeviceAttributeDeviceClass, error) {
	if val, ok := _CUpti_DeviceAttributeDeviceClassNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_DeviceAttributeDeviceClass values", s)
}

func (i CUpti_DeviceAttributeDeviceClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_DeviceAttributeDeviceClass) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_DeviceAttributeDeviceClass should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_DeviceAttributeDeviceClassString(s)
	return err
}
