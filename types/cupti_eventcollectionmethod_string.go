// Code generated by "enumer -type=CUpti_EventCollectionMethod -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_EventCollectionMethod_name_0 = "CUPTI_EVENT_COLLECTION_METHOD_PMCUPTI_EVENT_COLLECTION_METHOD_SMCUPTI_EVENT_COLLECTION_METHOD_INSTRUMENTEDCUPTI_EVENT_COLLECTION_METHOD_NVLINK_TC"
	_CUpti_EventCollectionMethod_name_1 = "CUPTI_EVENT_COLLECTION_METHOD_FORCE_INT"
)

var (
	_CUpti_EventCollectionMethod_index_0 = [...]uint8{0, 32, 64, 106, 145}
	_CUpti_EventCollectionMethod_index_1 = [...]uint8{0, 39}
)

func (i CUpti_EventCollectionMethod) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _CUpti_EventCollectionMethod_name_0[_CUpti_EventCollectionMethod_index_0[i]:_CUpti_EventCollectionMethod_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_EventCollectionMethod_name_1
	default:
		return fmt.Sprintf("CUpti_EventCollectionMethod(%d)", i)
	}
}

var _CUpti_EventCollectionMethodNameToValue_map = map[string]CUpti_EventCollectionMethod{
	_CUpti_EventCollectionMethod_name_0[0:32]:    0,
	_CUpti_EventCollectionMethod_name_0[32:64]:   1,
	_CUpti_EventCollectionMethod_name_0[64:106]:  2,
	_CUpti_EventCollectionMethod_name_0[106:145]: 3,
	_CUpti_EventCollectionMethod_name_1[0:39]:    2147483647,
}

func CUpti_EventCollectionMethodString(s string) (CUpti_EventCollectionMethod, error) {
	if val, ok := _CUpti_EventCollectionMethodNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_EventCollectionMethod values", s)
}

func (i CUpti_EventCollectionMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_EventCollectionMethod) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_EventCollectionMethod should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_EventCollectionMethodString(s)
	return err
}
