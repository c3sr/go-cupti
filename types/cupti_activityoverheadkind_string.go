// Code generated by "enumer -type=CUpti_ActivityOverheadKind -json"; DO NOT EDIT

package types

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityOverheadKind_name_0 = "CUPTI_ACTIVITY_OVERHEAD_UNKNOWNCUPTI_ACTIVITY_OVERHEAD_DRIVER_COMPILER"
	_CUpti_ActivityOverheadKind_name_1 = "CUPTI_ACTIVITY_OVERHEAD_CUPTI_BUFFER_FLUSH"
	_CUpti_ActivityOverheadKind_name_2 = "CUPTI_ACTIVITY_OVERHEAD_CUPTI_INSTRUMENTATION"
	_CUpti_ActivityOverheadKind_name_3 = "CUPTI_ACTIVITY_OVERHEAD_CUPTI_RESOURCE"
	_CUpti_ActivityOverheadKind_name_4 = "CUPTI_ACTIVITY_OVERHEAD_FORCE_INT"
)

var (
	_CUpti_ActivityOverheadKind_index_0 = [...]uint8{0, 31, 70}
	_CUpti_ActivityOverheadKind_index_1 = [...]uint8{0, 42}
	_CUpti_ActivityOverheadKind_index_2 = [...]uint8{0, 45}
	_CUpti_ActivityOverheadKind_index_3 = [...]uint8{0, 38}
	_CUpti_ActivityOverheadKind_index_4 = [...]uint8{0, 33}
)

func (i CUpti_ActivityOverheadKind) String() string {
	switch {
	case 0 <= i && i <= 1:
		return _CUpti_ActivityOverheadKind_name_0[_CUpti_ActivityOverheadKind_index_0[i]:_CUpti_ActivityOverheadKind_index_0[i+1]]
	case i == 65536:
		return _CUpti_ActivityOverheadKind_name_1
	case i == 131072:
		return _CUpti_ActivityOverheadKind_name_2
	case i == 196608:
		return _CUpti_ActivityOverheadKind_name_3
	case i == 2147483647:
		return _CUpti_ActivityOverheadKind_name_4
	default:
		return fmt.Sprintf("CUpti_ActivityOverheadKind(%d)", i)
	}
}

var _CUpti_ActivityOverheadKindNameToValue_map = map[string]CUpti_ActivityOverheadKind{
	_CUpti_ActivityOverheadKind_name_0[0:31]:  0,
	_CUpti_ActivityOverheadKind_name_0[31:70]: 1,
	_CUpti_ActivityOverheadKind_name_1[0:42]:  65536,
	_CUpti_ActivityOverheadKind_name_2[0:45]:  131072,
	_CUpti_ActivityOverheadKind_name_3[0:38]:  196608,
	_CUpti_ActivityOverheadKind_name_4[0:33]:  2147483647,
}

func CUpti_ActivityOverheadKindString(s string) (CUpti_ActivityOverheadKind, error) {
	if val, ok := _CUpti_ActivityOverheadKindNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityOverheadKind values", s)
}

func (i CUpti_ActivityOverheadKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_ActivityOverheadKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityOverheadKind should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityOverheadKindString(s)
	return err
}
