// Code generated by "enumer -type=CUpti_CallbackIdSync -json -text -yaml -sql"; DO NOT EDIT.

//
package types

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
)

const (
	_CUpti_CallbackIdSyncName_0 = "CUPTI_CBID_SYNCHRONIZE_INVALIDCUPTI_CBID_SYNCHRONIZE_STREAM_SYNCHRONIZEDCUPTI_CBID_SYNCHRONIZE_CONTEXT_SYNCHRONIZEDCUPTI_CBID_SYNCHRONIZE_SIZE"
	_CUpti_CallbackIdSyncName_1 = "CUPTI_CBID_SYNCHRONIZE_FORCE_INT"
)

var (
	_CUpti_CallbackIdSyncIndex_0 = [...]uint8{0, 30, 72, 115, 142}
	_CUpti_CallbackIdSyncIndex_1 = [...]uint8{0, 32}
)

func (i CUpti_CallbackIdSync) String() string {
	switch {
	case 0 <= i && i <= 3:
		return _CUpti_CallbackIdSyncName_0[_CUpti_CallbackIdSyncIndex_0[i]:_CUpti_CallbackIdSyncIndex_0[i+1]]
	case i == 2147483647:
		return _CUpti_CallbackIdSyncName_1
	default:
		return fmt.Sprintf("CUpti_CallbackIdSync(%d)", i)
	}
}

var _CUpti_CallbackIdSyncValues = []CUpti_CallbackIdSync{0, 1, 2, 3, 2147483647}

var _CUpti_CallbackIdSyncNameToValueMap = map[string]CUpti_CallbackIdSync{
	_CUpti_CallbackIdSyncName_0[0:30]:    0,
	_CUpti_CallbackIdSyncName_0[30:72]:   1,
	_CUpti_CallbackIdSyncName_0[72:115]:  2,
	_CUpti_CallbackIdSyncName_0[115:142]: 3,
	_CUpti_CallbackIdSyncName_1[0:32]:    2147483647,
}

// CUpti_CallbackIdSyncString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CUpti_CallbackIdSyncString(s string) (CUpti_CallbackIdSync, error) {
	if val, ok := _CUpti_CallbackIdSyncNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_CallbackIdSync values", s)
}

// CUpti_CallbackIdSyncValues returns all values of the enum
func CUpti_CallbackIdSyncValues() []CUpti_CallbackIdSync {
	return _CUpti_CallbackIdSyncValues
}

// IsACUpti_CallbackIdSync returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CUpti_CallbackIdSync) IsACUpti_CallbackIdSync() bool {
	for _, v := range _CUpti_CallbackIdSyncValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for CUpti_CallbackIdSync
func (i CUpti_CallbackIdSync) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for CUpti_CallbackIdSync
func (i *CUpti_CallbackIdSync) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_CallbackIdSync should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_CallbackIdSyncString(s)
	return err
}

// MarshalText implements the encoding.TextMarshaler interface for CUpti_CallbackIdSync
func (i CUpti_CallbackIdSync) MarshalText() ([]byte, error) {
	return []byte(i.String()), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface for CUpti_CallbackIdSync
func (i *CUpti_CallbackIdSync) UnmarshalText(text []byte) error {
	var err error
	*i, err = CUpti_CallbackIdSyncString(string(text))
	return err
}

// MarshalYAML implements a YAML Marshaler for CUpti_CallbackIdSync
func (i CUpti_CallbackIdSync) MarshalYAML() (interface{}, error) {
	return i.String(), nil
}

// UnmarshalYAML implements a YAML Unmarshaler for CUpti_CallbackIdSync
func (i *CUpti_CallbackIdSync) UnmarshalYAML(unmarshal func(interface{}) error) error {
	var s string
	if err := unmarshal(&s); err != nil {
		return err
	}

	var err error
	*i, err = CUpti_CallbackIdSyncString(s)
	return err
}

func (i CUpti_CallbackIdSync) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *CUpti_CallbackIdSync) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	str, ok := value.(string)
	if !ok {
		bytes, ok := value.([]byte)
		if !ok {
			return fmt.Errorf("value is not a byte slice")
		}

		str = string(bytes[:])
	}

	val, err := CUpti_CallbackIdSyncString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
