// Code generated by "enumer -type=CUpti_ActivityPreemptionKind -json"; DO NOT EDIT

package cupti

import (
	"encoding/json"
	"fmt"
)

const (
	_CUpti_ActivityPreemptionKind_name_0 = "CUPTI_ACTIVITY_PREEMPTION_KIND_UNKNOWNCUPTI_ACTIVITY_PREEMPTION_KIND_SAVECUPTI_ACTIVITY_PREEMPTION_KIND_RESTORE"
	_CUpti_ActivityPreemptionKind_name_1 = "CUPTI_ACTIVITY_PREEMPTION_KIND_FORCE_INT"
)

var (
	_CUpti_ActivityPreemptionKind_index_0 = [...]uint8{0, 38, 73, 111}
	_CUpti_ActivityPreemptionKind_index_1 = [...]uint8{0, 40}
)

func (i CUpti_ActivityPreemptionKind) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _CUpti_ActivityPreemptionKind_name_0[_CUpti_ActivityPreemptionKind_index_0[i]:_CUpti_ActivityPreemptionKind_index_0[i+1]]
	case i == 2147483647:
		return _CUpti_ActivityPreemptionKind_name_1
	default:
		return fmt.Sprintf("CUpti_ActivityPreemptionKind(%d)", i)
	}
}

var _CUpti_ActivityPreemptionKindNameToValue_map = map[string]CUpti_ActivityPreemptionKind{
	_CUpti_ActivityPreemptionKind_name_0[0:38]:   0,
	_CUpti_ActivityPreemptionKind_name_0[38:73]:  1,
	_CUpti_ActivityPreemptionKind_name_0[73:111]: 2,
	_CUpti_ActivityPreemptionKind_name_1[0:40]:   2147483647,
}

func CUpti_ActivityPreemptionKindString(s string) (CUpti_ActivityPreemptionKind, error) {
	if val, ok := _CUpti_ActivityPreemptionKindNameToValue_map[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CUpti_ActivityPreemptionKind values", s)
}

func (i CUpti_ActivityPreemptionKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

func (i *CUpti_ActivityPreemptionKind) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CUpti_ActivityPreemptionKind should be a string, got %s", data)
	}

	var err error
	*i, err = CUpti_ActivityPreemptionKindString(s)
	return err
}
